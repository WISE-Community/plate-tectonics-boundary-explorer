{"version":3,"sources":["components/backgrounds/convection.svg","components/backgrounds/continental-continental.svg","components/backgrounds/continental-continental-convergent1.svg","components/backgrounds/continental-continental-convergent2.svg","components/backgrounds/continental-continental-convergent3.svg","components/backgrounds/continental-continental-convergent4.svg","components/backgrounds/continental-continental-divergent1.svg","components/backgrounds/continental-continental-divergent2.svg","components/backgrounds/continental-continental-divergent3.svg","components/backgrounds/continental-continental-divergent4.svg","components/backgrounds/continental-oceanic.svg","components/backgrounds/continental-oceanic-convergent1.svg","components/backgrounds/continental-oceanic-convergent2.svg","components/backgrounds/continental-oceanic-convergent3.svg","components/backgrounds/continental-oceanic-convergent4.svg","components/backgrounds/oceanic-oceanic.svg","components/backgrounds/oceanic-oceanic-convergent1.svg","components/backgrounds/oceanic-oceanic-convergent2.svg","components/backgrounds/oceanic-oceanic-convergent3.svg","components/backgrounds/oceanic-oceanic-convergent4.svg","components/backgrounds/oceanic-oceanic-divergent1.svg","components/backgrounds/oceanic-oceanic-divergent2.svg","components/backgrounds/oceanic-oceanic-divergent3.svg","components/backgrounds/oceanic-oceanic-divergent4.svg","components/backgrounds/convergent.svg","components/backgrounds/divergent.svg","components/backgrounds/Himalayas.png","components/backgrounds/aleutian-alaska-arc.jpg","components/backgrounds/andes.jpg","components/backgrounds/rift.jpg","components/backgrounds/mid-atlantic-ridge.jpg","components/backgrounds/aleutian-alaska-arc-mask.svg","components/backgrounds/himalayas-mask.svg","components/backgrounds/andes-mask.svg","components/backgrounds/east-african-rift-mask.svg","components/backgrounds/mid-atlantic-ridge-mask.svg","components/backgrounds/himalayas-location.jpg","components/backgrounds/aleutian-alaska-arc-location.png","components/backgrounds/andes-location.jpg","components/backgrounds/east-african-rift-location.jpg","components/backgrounds/mid-atlantic-ridge-location.png","components/backgrounds/home.svg","components/backgrounds/retry.svg","components/backgrounds/start.svg","components/backgrounds/map.jpg","components/backgrounds/check.svg","State.js","components/Background.js","components/TopText.js","components/Button.js","components/ControlPanel.js","components/RealExamplesPanel.js","components/WorldMap.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","INIT_PLATE_STATES","END_PLATE_STATES","BOUNDARY_STATES","STATE_TEXT","cc","co","oo","c","d","ccd","ccc","coc","cod","ood","ooc","REAL_EXAMPLES_TEXT","TOP_TEXT","AFTER_INPUT_TEXT","SCREEN_STATES","backgroundForState","state","frame","CC","CCC1","CCC2","CCC3","CCC4","CCD1","CCD2","CCD3","CCD4","CO","COC1","COC2","COC3","COC4","OO","OOC1","OOC2","OOC3","OOC4","OOD1","OOD2","OOD3","OOD4","boundaryForState","C","D","examplesForState","Mountain","Rift","Andes","IslandArc","Ridge","locationForState","MountainLocation","RiftLocation","AndesLocation","IslandArcLocation","RidgeLocation","maskForState","HimalayasMask","EastAfricanRiftMask","AndesMask","AleutianAlaskaArcMask","MidAtlanticRidgeMask","maskClassForState","splitEndState","substring","Background","props","hide","leftConvectionClass","boundaryState","rightConvectionClass","hideConvection","hidePlateState","plateState","className","hidden","src","Convection","TopText","text","afterInputText","Fragment","placeholder","rows","onChange","onInputChanged","Button","style","disabled","backgroundImage","background","borderColor","selected","onClick","children","ControlPanel","map","type","key","RealExamplePanel","hoverExample","plateType","boundaryType","finished","finishedRealExamples","includes","top","hoverCoordinates","left","WorldMap","Map","onMouseEnter","event","onHover","onMouseLeave","endHover","Check","divForState","App","useState","hoveringOverExample","setHoverExample","setHoverCoordinates","selectedExample","selectExample","setPlateState","setBoundaryState","screenState","setScreenState","topText","setTopText","setAfterInputText","input","setInput","setFinishedRealExamples","animationFrame","setAnimationFrame","onExampleButtonClicked","useEffect","setTimeout","startRetryButton","Start","Retry","target","value","canStart","Home","split","length","color","topTextPostfix","endState","selectedPlateType","selectedBoundaryType","textDecoration","console","log","example","clientX","clientY","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,iE,gBCA3CD,EAAOC,QAAU,IAA0B,iE,gBCA3CD,EAAOC,QAAU,IAA0B,iE,gBCA3CD,EAAOC,QAAU,IAA0B,iE,gBCA3CD,EAAOC,QAAU,IAA0B,gE,gBCA3CD,EAAOC,QAAU,IAA0B,gE,gBCA3CD,EAAOC,QAAU,IAA0B,gE,gBCA3CD,EAAOC,QAAU,IAA0B,gE,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,0D,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.a122b936.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/convection.1ebc75f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental.84f44bcb.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent1.ea6bc2d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent2.575928bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent3.984774dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent4.d5e026ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent1.49eadff8.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent2.6d8cc9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent3.a9697d7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent4.b295a3ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-oceanic.3ef19046.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-oceanic-convergent1.1dd8403f.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-oceanic-convergent2.32dcdb8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-oceanic-convergent3.397e8570.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-oceanic-convergent4.d49b7300.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic.1e74e312.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-convergent1.249a777e.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-convergent2.f5df7f56.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-convergent3.7ee7896f.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-convergent4.74fd26f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-divergent1.ec2fffaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-divergent2.f7fab7b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-divergent3.31fb9be1.svg\";","module.exports = __webpack_public_path__ + \"static/media/oceanic-oceanic-divergent4.7c74d67d.svg\";","module.exports = __webpack_public_path__ + \"static/media/convergent.52d2b5e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/divergent.0cbabcaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Himalayas.7116b03f.png\";","module.exports = __webpack_public_path__ + \"static/media/aleutian-alaska-arc.a9593789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/andes.76843f1f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rift.8972def4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mid-atlantic-ridge.d1f75138.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aleutian-alaska-arc-mask.e759f3b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/himalayas-mask.86af0b83.svg\";","module.exports = __webpack_public_path__ + \"static/media/andes-mask.4041f449.svg\";","module.exports = __webpack_public_path__ + \"static/media/east-african-rift-mask.c9ad3bd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/mid-atlantic-ridge-mask.88de7ccf.svg\";","module.exports = __webpack_public_path__ + \"static/media/himalayas-location.4b46ec56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aleutian-alaska-arc-location.842f5e98.png\";","module.exports = __webpack_public_path__ + \"static/media/andes-location.c7e8e389.jpg\";","module.exports = __webpack_public_path__ + \"static/media/east-african-rift-location.e8bb5e31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mid-atlantic-ridge-location.17014256.png\";","module.exports = __webpack_public_path__ + \"static/media/home.da8a7cf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/retry.b4728a91.svg\";","module.exports = __webpack_public_path__ + \"static/media/start.668f985f.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.fb98398d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/check.2a4f4443.svg\";","import CC from \"./components/backgrounds/continental-continental.svg\";\nimport CCC1 from \"./components/backgrounds/continental-continental-convergent1.svg\";\nimport CCC2 from \"./components/backgrounds/continental-continental-convergent2.svg\";\nimport CCC3 from \"./components/backgrounds/continental-continental-convergent3.svg\";\nimport CCC4 from \"./components/backgrounds/continental-continental-convergent4.svg\";\nimport CCD1 from \"./components/backgrounds/continental-continental-divergent1.svg\";\nimport CCD2 from \"./components/backgrounds/continental-continental-divergent2.svg\";\nimport CCD3 from \"./components/backgrounds/continental-continental-divergent3.svg\";\nimport CCD4 from \"./components/backgrounds/continental-continental-divergent4.svg\";\nimport CO from \"./components/backgrounds/continental-oceanic.svg\";\nimport COC1 from \"./components/backgrounds/continental-oceanic-convergent1.svg\";\nimport COC2 from \"./components/backgrounds/continental-oceanic-convergent2.svg\";\nimport COC3 from \"./components/backgrounds/continental-oceanic-convergent3.svg\";\nimport COC4 from \"./components/backgrounds/continental-oceanic-convergent4.svg\";\nimport OO from \"./components/backgrounds/oceanic-oceanic.svg\";\nimport OOC1 from \"./components/backgrounds/oceanic-oceanic-convergent1.svg\";\nimport OOC2 from \"./components/backgrounds/oceanic-oceanic-convergent2.svg\";\nimport OOC3 from \"./components/backgrounds/oceanic-oceanic-convergent3.svg\";\nimport OOC4 from \"./components/backgrounds/oceanic-oceanic-convergent4.svg\";\nimport OOD1 from \"./components/backgrounds/oceanic-oceanic-divergent1.svg\";\nimport OOD2 from \"./components/backgrounds/oceanic-oceanic-divergent2.svg\";\nimport OOD3 from \"./components/backgrounds/oceanic-oceanic-divergent3.svg\";\nimport OOD4 from \"./components/backgrounds/oceanic-oceanic-divergent4.svg\";\nimport C from \"./components/backgrounds/convergent.svg\";\nimport D from \"./components/backgrounds/divergent.svg\";\nimport Mountain from \"./components/backgrounds/Himalayas.png\";\nimport IslandArc from \"./components/backgrounds/aleutian-alaska-arc.jpg\";\nimport Andes from \"./components/backgrounds/andes.jpg\";\nimport Rift from \"./components/backgrounds/rift.jpg\";\nimport Ridge from \"./components/backgrounds/mid-atlantic-ridge.jpg\";\nimport AleutianAlaskaArcMask from \"./components/backgrounds/aleutian-alaska-arc-mask.svg\";\nimport HimalayasMask from \"./components/backgrounds/himalayas-mask.svg\";\nimport AndesMask from \"./components/backgrounds/andes-mask.svg\";\nimport EastAfricanRiftMask from \"./components/backgrounds/east-african-rift-mask.svg\";\nimport MidAtlanticRidgeMask from \"./components/backgrounds/mid-atlantic-ridge-mask.svg\";\nimport MountainLocation from \"./components/backgrounds/himalayas-location.jpg\";\nimport IslandArcLocation from \"./components/backgrounds/aleutian-alaska-arc-location.png\";\nimport AndesLocation from \"./components/backgrounds/andes-location.jpg\";\nimport RiftLocation from \"./components/backgrounds/east-african-rift-location.jpg\";\nimport RidgeLocation from \"./components/backgrounds/mid-atlantic-ridge-location.png\";\n\nexport const MIN_INPUT_LENGTH = 3;\nexport const INIT_PLATE_STATES = [\"cc\", \"co\", \"oo\"];\nexport const END_PLATE_STATES = [\"ccc\", \"ccd\", \"coc\", \"cod\", \"ooc\", \"ood\"];\nexport const BOUNDARY_STATES = [\"c\", \"d\"];\nexport const STATE_TEXT = {\n\tcc: \"Continental-continental\",\n\tco: \"Continental-oceanic\",\n\too: \"Oceanic-oceanic\",\n\tc: \"Convergent boundary\",\n\td: \"Divergent boundary\",\n\tccd: \"A rift.\",\n\tccc: \"Mountains.\",\n\tcoc: \"A subduction zone at the boundary, with mountains on land.\",\n\tcod: \"We don't know. Scientists haven't found an example of this yet on Earth, but maybe it happened sometime in Earth's past?\",\n\tood: \"A mid-ocean ridge.\",\n\tooc: \"A subduction zone at the boundary, with island arcs.\"\n};\nexport const REAL_EXAMPLES_TEXT = {\n\tccd: \"East African Rift\",\n\tccc: \"Himalayas\",\n\tcoc: \"Andes Mountain Range\",\n\tood: \"Mid-Atlantic Ridge\",\n\tooc: \"Aleutian-Alaska Arc\"\n};\nexport const TOP_TEXT = {\n\trealExampleSelection: \"Choose a landmark to investigate!\",\n\tplateSelection: \"Choose the plate boundary that created the\",\n\tcanStart: \"Write your prediction below (in a full sentence):\",\n\tcanRetry: \"Looks like that's not what created the\",\n\tcanRestart: \"That's what created the\"\n};\nexport const AFTER_INPUT_TEXT = {\n\tcanStart: \"then click the Play button to begin!\"\n};\nexport const SCREEN_STATES = {\n\trealExampleSelection: 1,\n\tplateSelection: 2,\n\tcanStart: 3,\n\tcanRetry: 4,\n\tcanRestart: 5\n};\n\nexport function backgroundForState(state, frame) {\n\tswitch (state) {\n\t\tcase \"cc\":\n\t\t\treturn CC;\n\t\tcase \"ccc\":\n\t\t\tswitch (frame) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn CCC1;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn CCC2;\n\t\t\t\tcase 3:\n\t\t\t\t\treturn CCC3;\n\t\t\t\tcase 4:\n\t\t\t\t\treturn CCC4;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\tcase \"ccd\":\n\t\t\tswitch (frame) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn CCD1;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn CCD2;\n\t\t\t\tcase 3:\n\t\t\t\t\treturn CCD3;\n\t\t\t\tcase 4:\n\t\t\t\t\treturn CCD4;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\tcase \"co\":\n\t\tcase \"cod\":\n\t\t\treturn CO;\n\t\tcase \"coc\":\n\t\t\tswitch (frame) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn COC1;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn COC2;\n\t\t\t\tcase 3:\n\t\t\t\t\treturn COC3;\n\t\t\t\tcase 4:\n\t\t\t\t\treturn COC4;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\tcase \"oo\":\n\t\t\treturn OO;\n\t\tcase \"ooc\":\n\t\t\tswitch (frame) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn OOC1;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn OOC2;\n\t\t\t\tcase 3:\n\t\t\t\t\treturn OOC3;\n\t\t\t\tcase 4:\n\t\t\t\t\treturn OOC4;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\tcase \"ood\":\n\t\t\tswitch (frame) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn OOD1;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn OOD2;\n\t\t\t\tcase 3:\n\t\t\t\t\treturn OOD3;\n\t\t\t\tcase 4:\n\t\t\t\t\treturn OOD4;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nexport function boundaryForState(state) {\n\tswitch (state) {\n\t\tcase \"c\":\n\t\t\treturn C;\n\t\tcase \"d\":\n\t\t\treturn D;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nexport function examplesForState(state) {\n\tswitch (state) {\n\t\tcase \"ccc\":\n\t\t\treturn Mountain;\n\t\tcase \"ccd\":\n\t\t\treturn Rift;\n\t\tcase \"coc\":\n\t\t\treturn Andes;\n\t\tcase \"ooc\":\n\t\t\treturn IslandArc;\n\t\tcase \"ood\":\n\t\t\treturn Ridge;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nexport function locationForState(state) {\n\tswitch (state) {\n\t\tcase \"ccc\":\n\t\t\treturn MountainLocation;\n\t\tcase \"ccd\":\n\t\t\treturn RiftLocation;\n\t\tcase \"coc\":\n\t\t\treturn AndesLocation;\n\t\tcase \"ooc\":\n\t\t\treturn IslandArcLocation;\n\t\tcase \"ood\":\n\t\t\treturn RidgeLocation;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nexport function maskForState(state) {\n\tswitch (state) {\n\t\tcase \"ccc\":\n\t\t\treturn HimalayasMask;\n\t\tcase \"ccd\":\n\t\t\treturn EastAfricanRiftMask;\n\t\tcase \"coc\":\n\t\t\treturn AndesMask;\n\t\tcase \"ooc\":\n\t\t\treturn AleutianAlaskaArcMask;\n\t\tcase \"ood\":\n\t\t\treturn MidAtlanticRidgeMask;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nexport function maskClassForState(state) {\n\tswitch (state) {\n\t\tcase \"ccc\":\n\t\t\treturn \"HimalayasMask\";\n\t\tcase \"ccd\":\n\t\t\treturn \"EastAfricanRiftMask\";\n\t\tcase \"coc\":\n\t\t\treturn \"AndesMask\";\n\t\tcase \"ooc\":\n\t\t\treturn \"AleutianAlaskaArcMask\";\n\t\tcase \"ood\":\n\t\t\treturn \"MidAtlanticRidgeMask\";\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nexport function splitEndState(state) {\n\tconst plateType = state.substring(0, 2);\n\tconst boundaryType = state.substring(2, 3);\n\treturn [plateType, boundaryType];\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {INIT_PLATE_STATES, END_PLATE_STATES, BOUNDARY_STATES, backgroundForState} from \"../State\";\nimport Convection from \"./backgrounds/convection.svg\";\n\nBackground.propTypes = {\n\thide: PropTypes.bool,\n\tplateState: PropTypes.oneOf([\"\", ...INIT_PLATE_STATES, ...END_PLATE_STATES]),\n\tboundaryState: PropTypes.oneOf([\"\", ...BOUNDARY_STATES]),\n\tframe: PropTypes.number\n};\nfunction Background(props) {\n\tif (props.hide)\n\t\treturn null;\n\n\tconst leftConvectionClass = props.boundaryState === \"c\" ? \"RotateCW\" : \"RotateCCW\";\n\tconst rightConvectionClass = props.boundaryState === \"c\" ? \"RotateCCW\" : \"RotateCW\";\n\tconst hideConvection = props.boundaryState === \"\";\n\tconst hidePlateState = props.plateState === \"\";\n\n\treturn (\n\t\t<div className=\"BackgroundContainer\">\n\t\t\t<img hidden={hideConvection} className={`Convection ConvectionLeft ${leftConvectionClass}`} src={Convection}/>\n\t\t\t<img hidden={hideConvection} className={`Convection ConvectionRight ${rightConvectionClass}`} src={Convection}/>\n\t\t\t{hidePlateState ? null :\n\t\t\t\t<img className=\"Background\" src={backgroundForState(props.plateState, props.frame)}/>}\n\t\t</div>\n\t);\n}\n\n\nexport default Background;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nTopText.propTypes = {\n    hide: PropTypes.bool,\n    text: PropTypes.object,\n    afterInputText: PropTypes.string,\n    onInputChanged: PropTypes.func\n}\n\nfunction TopText(props) {\n    if (props.hide)\n        return null;\n\n    return (\n        <div className=\"TopText\">\n            <p> {props.text} </p>\n            {props.afterInputText ?\n            <React.Fragment>\n                <textarea className=\"TopTextInput\" placeholder=\"Type your responses here!\" rows={3}\n                    onChange={props.onInputChanged}/>\n                <p> {props.afterInputText} </p>\n            </React.Fragment> : null}\n        </div>\n    );\n}\n\nexport default TopText;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nButton.propTypes = {\n    hide: PropTypes.bool,\n    className: PropTypes.string,\n    selected: PropTypes.bool,\n    background: PropTypes.string,\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func,\n    style: PropTypes.object\n}\n\nfunction Button(props) {\n    if (props.hide)\n        return null;\n    const style = props.style ? props.style : null;\n    return (\n        <div className={`Button ${props.className} ${props.disabled ? null : \"ButtonClickable\"}`}\n             style={{backgroundImage: props.background ? `url(${props.background})` : null,\n                    borderColor: props.selected ? \"#2962FF\" : \"#FFEA00\",\n                    ...style}}\n             onClick={props.disabled ? null : props.onClick}>\n            {props.selected ? <div className=\"SelectedButton\" /> : null}\n            {props.children}\n        </div>\n    );\n}\n\nexport default Button;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport {INIT_PLATE_STATES, END_PLATE_STATES, BOUNDARY_STATES, STATE_TEXT, backgroundForState, boundaryForState} from \"../State\";\n\nControlPanel.propTypes = {\n    onClick: PropTypes.func,\n    hide: PropTypes.bool,\n    plateState: PropTypes.oneOf([\"\", ...INIT_PLATE_STATES, ...END_PLATE_STATES]),\n    boundaryState: PropTypes.oneOf([\"\", ...BOUNDARY_STATES])\n}\n\nfunction ControlPanel(props) {\n    if (props.hide)\n        return null;\n\n    return (\n        <React.Fragment>\n            <div className=\"PlateButtons\">\n                {INIT_PLATE_STATES.map(state => plateButtonOfType(props.plateState, state, props.onClick))}\n            </div>\n            <div className=\"BoundaryButtons\">\n                {BOUNDARY_STATES.map(state => boundaryButtonOfType(props.boundaryState, state, props.onClick))}\n            </div>\n        </React.Fragment>\n    );\n}\nfunction plateButtonOfType(plateState, type, onClick) {\n    return <Button\n        key={type}\n        onClick={() => onClick(type)}\n        selected={plateState === type}>\n        <img src={backgroundForState(type)}/>\n        <p>{STATE_TEXT[type]}</p>\n    </Button>;\n}\nfunction boundaryButtonOfType(boundaryState, type, onClick) {\n    return <Button\n        key={type}\n        onClick={() => onClick(type)}\n        selected={boundaryState === type}>\n        <img src={boundaryForState(type)}/>\n        <p>{STATE_TEXT[type]}</p>\n    </Button>;\n}\n\nexport default ControlPanel;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport {\n\tREAL_EXAMPLES_TEXT,\n\texamplesForState,\n\tbackgroundForState,\n\tboundaryForState,\n\tsplitEndState,\n\tSTATE_TEXT\n} from \"../State\";\n\nRealExamplePanel.propTypes = {\n\tfinishedRealExamples: PropTypes.array,\n\thide: PropTypes.bool,\n\thoverExample: PropTypes.string,\n\thoverCoordinates: PropTypes.array\n}\n\nfunction RealExamplePanel(props) {\n\tif (props.hide || !props.hoverExample || props.hoverExample === \"\")\n\t\treturn null;\n\tconst [plateType, boundaryType] = splitEndState(props.hoverExample);\n\tconst finished = props.finishedRealExamples.includes(props.hoverExample);\n\treturn (\n\t\t<Button\n\t\t\tclassName=\"RealExamplePanel\"\n\t\t\tstyle={{top: props.hoverCoordinates[1], left: props.hoverCoordinates[0]}}\n\t\t\tdisabled={true}\n\t\t\tbackground={examplesForState(props.hoverExample)}>\n\t\t\t{finished ? <React.Fragment>\n\t\t\t\t<div className=\"ComboInButton\" style={{\n\t\t\t\t\tbackgroundImage: `url(${backgroundForState(plateType)})`}}>\n\t\t\t\t\t<p>{STATE_TEXT[plateType]}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ComboInButton\" style={{\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\tbackgroundImage: `url(${boundaryForState(boundaryType)})`}}>\n\t\t\t\t\t<p>{STATE_TEXT[boundaryType]}</p>\n\t\t\t\t</div>\n\t\t\t</React.Fragment> : null}\n\t\t\t<p>{REAL_EXAMPLES_TEXT[props.hoverExample]}</p>\n\t\t</Button>\n\t);\n}\n\nexport default RealExamplePanel;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Map from \"./backgrounds/map.jpg\";\nimport Check from \"./backgrounds/check.svg\";\nimport {END_PLATE_STATES, maskClassForState, maskForState} from \"../State\";\n\nWorldMap.propTypes = {\n\thide: PropTypes.bool,\n\tonClick: PropTypes.func,\n\tonHover: PropTypes.func,\n\tendHover: PropTypes.func,\n\tfinishedRealExamples: PropTypes.array\n};\nfunction WorldMap(props) {\n\tif (props.hide)\n\t\treturn null;\n\treturn (\n\t\t<div className=\"WorldMap\" style={{backgroundImage: `url(${Map})`}}>\n\t\t\t{END_PLATE_STATES.map(state => divForState(state, props))}\n\t\t</div>\n\t);\n}\n\nfunction divForState(state, props) {\n\tif (state === \"cod\")\n\t\treturn null;\n\treturn (\n\t\t<React.Fragment key={state}>\n\t\t\t<div className={maskClassForState(state)}\n\t\t\t     key={`${state}Mask`}\n\t\t\t     style={{backgroundImage: `url(${maskForState(state)}`}}\n\t\t\t     onMouseEnter={event => props.onHover(event, state)}\n\t\t\t     onMouseLeave={props.endHover}\n\t\t\t     onClick={() => props.onClick(state)}/>\n\t\t\t<img className={`Check ${maskClassForState(state)}`} src={Check} key={`${state}Check`}\n\t\t\t     hidden={!props.finishedRealExamples.includes(state)}/>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default WorldMap;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Background from \"./components/Background\";\nimport TopText from \"./components/TopText\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport {\n    BOUNDARY_STATES,\n    INIT_PLATE_STATES,\n    TOP_TEXT,\n    AFTER_INPUT_TEXT,\n    STATE_TEXT,\n    SCREEN_STATES,\n    examplesForState,\n    REAL_EXAMPLES_TEXT,\n    END_PLATE_STATES, splitEndState, MIN_INPUT_LENGTH, locationForState\n} from \"./State\";\nimport RealExamplePanel from \"./components/RealExamplesPanel\";\nimport Button from \"./components/Button\";\nimport Home from \"./components/backgrounds/home.svg\";\nimport Retry from \"./components/backgrounds/retry.svg\";\nimport Start from \"./components/backgrounds/start.svg\";\nimport WorldMap from \"./components/WorldMap\";\n\nfunction App() {\n    const [hoveringOverExample, setHoverExample] = useState(\"\");\n    const [hoverCoordinates, setHoverCoordinates] = useState([0, 0]);\n    const [selectedExample, selectExample] = useState(\"\");\n    const [plateState, setPlateState] = useState(\"\");\n    const [boundaryState, setBoundaryState] = useState(\"\");\n    const [screenState, setScreenState] = useState(SCREEN_STATES.realExampleSelection);\n    const [topText, setTopText] = useState(<React.Fragment>{TOP_TEXT.realExampleSelection}</React.Fragment>);\n    const [afterInputText, setAfterInputText] = useState(\"\");\n    const [input, setInput] = useState(\"\");\n    const [finishedRealExamples, setFinishedRealExamples] = useState([]);\n    const [animationFrame, setAnimationFrame] = useState(1);\n\n    useEffect(() => {\n       if (!END_PLATE_STATES.includes(plateState)) //start countdown when results are showing\n           return;\n       if (animationFrame !== 4)\n            setTimeout(() => setAnimationFrame(animationFrame + 1), 500);\n    });\n\n    function onExampleButtonClicked(type) {\n        selectExample(type);\n        setTopText(<React.Fragment>{TOP_TEXT.plateSelection} {REAL_EXAMPLES_TEXT[type]}!</React.Fragment>);\n        setScreenState(SCREEN_STATES.plateSelection);\n        setPlateState(\"\");\n        setBoundaryState(\"\");\n    }\n    function onControlButtonClicked(type) {\n        let canStart;\n        if (INIT_PLATE_STATES.includes(type)) {\n            setPlateState(type);\n            canStart = boundaryState !== \"\";\n        }\n        else if (BOUNDARY_STATES.includes(type)) {\n            setBoundaryState(type);\n            canStart = plateState !== \"\";\n        }\n\n        //can start\n        if (canStart) {\n            setTopText(<React.Fragment>{TOP_TEXT.canStart}</React.Fragment>);\n            setAfterInputText(AFTER_INPUT_TEXT.canStart);\n            setScreenState(SCREEN_STATES.canStart);\n        }\n    }\n    function onStartRetryClicked() {\n        switch (screenState) {\n            case SCREEN_STATES.canStart:\n                if (input.split(' ').length < MIN_INPUT_LENGTH) {\n                    //prompt for more text\n                    setTopText(\n                    <React.Fragment>\n                        Remember to <span style={{color: \"#D32F2F\"}}>{TOP_TEXT.canStart}</span>\n                    </React.Fragment>);\n                    return;\n                }\n\n                const endState = plateState + boundaryState;\n                const correct = selectedExample === endState;\n                let topTextPostfix;\n\n                if (correct) {\n                    topTextPostfix = `${TOP_TEXT.canRestart} ${REAL_EXAMPLES_TEXT[selectedExample]}!`;\n                    setScreenState(SCREEN_STATES.canRestart);\n                    setFinishedRealExamples([endState, ...finishedRealExamples]);\n                }\n                else {\n                    //tell user what parts they got right\n                    const [selectedPlateType, selectedBoundaryType] = splitEndState(selectedExample);\n                    topTextPostfix = (\n                        <React.Fragment>\n                            {TOP_TEXT.canRetry} {REAL_EXAMPLES_TEXT[selectedExample]}... <br/>\n                            {selectedPlateType === plateState ?\n                                <React.Fragment>\n                                    But <span style={{textDecoration: \"underline\"}}>you were right about the <span\n                                    style={{color: \"#D32F2F\"}}>{STATE_TEXT[plateState]}</span> plates!</span>\n                                    <br/>\n                                </React.Fragment> : null}\n                            {selectedBoundaryType === boundaryState ?\n                                <React.Fragment>\n                                    But <span style={{textDecoration: \"underline\"}}>you were right about the <span\n                                    style={{color: \"#D32F2F\"}}>{STATE_TEXT[boundaryState]}</span>!</span>\n                                    <br/>\n                                </React.Fragment> : null}\n                            Click the Retry button to try again!\n                        </React.Fragment>);\n                    setScreenState(SCREEN_STATES.canRetry);\n                }\n\n                setPlateState(endState);\n                setTopText(\n                <React.Fragment>\n                    A\n                    <span style={{color: \"#D32F2F\"}}> {STATE_TEXT[boundaryState]} </span>\n                    with\n                    <span style={{color: \"#D32F2F\"}}> {STATE_TEXT[plateState]} </span>\n                    plates creates: <br/>\n                    {STATE_TEXT[endState]} <br/> <br/>\n                    {topTextPostfix}\n                </React.Fragment>);\n                setAfterInputText(\"\");\n                break;\n            case SCREEN_STATES.canRetry:\n                onExampleButtonClicked(selectedExample);\n                break;\n            default:\n                console.log(\"StartRestartButton clicked in invalid state\");\n        }\n        setAnimationFrame(1);\n    }\n    function onRestartClicked() {\n        setPlateState(\"\");\n        setBoundaryState(\"\");\n        setTopText(<React.Fragment>{TOP_TEXT.realExampleSelection}</React.Fragment>);\n        setAfterInputText(\"\");\n        setInput(\"\");\n        setScreenState(SCREEN_STATES.realExampleSelection);\n    }\n\n    let startRetryButton = null;\n    if (screenState === SCREEN_STATES.canStart)\n        startRetryButton = Start;\n    else if (screenState === SCREEN_STATES.canRetry)\n        startRetryButton = Retry;\n\n    return (\n        <div className=\"App\">\n            <TopText\n                text={topText}\n                afterInputText={afterInputText}\n                onInputChanged={event => setInput(event.target.value)}/>\n            <RealExamplePanel\n                hide={screenState !== SCREEN_STATES.realExampleSelection}\n                finishedRealExamples={finishedRealExamples}\n                hoverCoordinates={hoverCoordinates}\n                hoverExample={hoveringOverExample} />\n            <Button\n                hide={screenState === SCREEN_STATES.realExampleSelection}\n                className=\"SelectedExample\"\n                disabled={true}\n                background={examplesForState(selectedExample)}>\n                <p>{REAL_EXAMPLES_TEXT[selectedExample]}</p>\n            </Button>\n            <Button\n                hide={screenState === SCREEN_STATES.realExampleSelection}\n                className=\"SelectedLocation\"\n                disabled={true}\n                background={locationForState(selectedExample)}>\n                <p>Where it is</p>\n            </Button>\n            <ControlPanel\n                hide={screenState !== SCREEN_STATES.plateSelection && screenState !== SCREEN_STATES.canStart}\n                onClick={onControlButtonClicked}\n                plateState={plateState}\n                boundaryState={boundaryState}/>\n            <div className=\"ControlButtons\" hidden={screenState === SCREEN_STATES.realExampleSelection}>\n                <img className={screenState === SCREEN_STATES.canRestart ? \"ResizingButtons\" : null}\n                     src={Home}\n                     onClick={onRestartClicked}/>\n                <img className=\"ResizingButtons\"\n                     src={startRetryButton}\n                     onClick={onStartRetryClicked}\n                     hidden={screenState === SCREEN_STATES.canRestart}/>\n            </div>\n            <Background\n                hide={screenState === SCREEN_STATES.realExampleSelection}\n                plateState={plateState}\n                boundaryState={boundaryState}\n                frame={animationFrame}/>\n            <WorldMap\n                hide={screenState !== SCREEN_STATES.realExampleSelection}\n                onHover={(event, example) => {\n                    setHoverExample(example);\n                    setHoverCoordinates([event.clientX, event.clientY]);\n                }}\n                endHover={() => setHoverExample(\"\")}\n                finishedRealExamples={finishedRealExamples}\n                onClick={onExampleButtonClicked}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}